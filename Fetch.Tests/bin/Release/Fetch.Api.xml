<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fetch.Api</name>
    </assembly>
    <members>
        <member name="T:Fetch.Api.SerializableList`1">
            <summary>
            SerializableList is a wrapper for the generic List&lt;&gt; that performs its own serialization,
            to allow the user to add custom attributes to the list.  The .NET Framework List overrides
            any serialization of properties of a custom list class, so they don't get serialized.
            </summary>
            <typeparam name="ProductType">type of the product in the list</typeparam>
        </member>
        <member name="M:Fetch.Api.SerializableList`1.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Fetch.Api.SerializableList`1.Add(`0)">
            <summary>
            Add an product to the list
            </summary>
        </member>
        <member name="M:Fetch.Api.SerializableList`1.Clear">
            <summary>
            Clear all products from the list
            </summary>
        </member>
        <member name="M:Fetch.Api.SerializableList`1.Contains(`0)">
            <summary>
            Returns true if the given product exists in the list
            </summary>
        </member>
        <member name="M:Fetch.Api.SerializableList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the contents of the list into the given array, 
            at the given index
            </summary>
        </member>
        <member name="M:Fetch.Api.SerializableList`1.Remove(`0)">
            <summary>
            Remove the given product from the list
            </summary>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:Fetch.Api.SerializableList`1.GetEnumerator">
            <summary>
            Get the enumerator object from the list
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fetch.Api.SerializableList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get the enumerator object from the list
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fetch.Api.SerializableList`1.GetSchema">
            <summary>
            Get the Schema for the serialization of this list.  Not used.
            </summary>
        </member>
        <member name="M:Fetch.Api.SerializableList`1.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads data for this list in from the given XmlReader.
            May be overridden in a derived class to populate custom properties
            </summary>
        </member>
        <member name="M:Fetch.Api.SerializableList`1.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes data from this list into the given XmlWriter.
            May be overridden in a derived class to write custom properties
            </summary>
        </member>
        <member name="P:Fetch.Api.SerializableList`1.Count">
            <summary>
            Gets the number of products in the list
            </summary>
        </member>
        <member name="P:Fetch.Api.SerializableList`1.IsReadOnly">
            <summary>
            Returns false
            </summary>
        </member>
        <member name="P:Fetch.Api.SerializableList`1.Attributes">
            <summary>
            A collection of name/value pairs to be written as attributes of the root
            element of this list
            </summary>
        </member>
        <member name="T:Fetch.Api.Download">
            <summary>
            Product is a model object that mirrors the type used by the Fetch REST API, and contains
            all the properties and methods offered by the API.
            </summary>
        </member>
        <member name="M:Fetch.Api.Download.RetrieveAll">
            <summary>
            Retrieve all the existing products from Fetch
            </summary>
        </member>
        <member name="M:Fetch.Api.Download.Retrieve(System.Int32)">
            <summary>
            Retrieve a specific product from Fetch
            </summary>
            <param name="sku">The SKU of the Product to retrieve</param>
        </member>
        <member name="P:Fetch.Api.Download.Id">
            <summary>
            unique identifier for this product
            </summary>
        </member>
        <member name="P:Fetch.Api.Download.OrderId">
            <summary>
            Associated order (if present)
            </summary>
        </member>
        <member name="P:Fetch.Api.Download.ProductSku">
            <summary>
            Product Sku
            </summary>
        </member>
        <member name="P:Fetch.Api.Download.IPAddress">
            <summary>
            IP Address of client
            </summary>
        </member>
        <member name="P:Fetch.Api.Download.DownloadedAt">
            <summary>
            date this product was downoloaded
            </summary>
        </member>
        <member name="P:Fetch.Api.Download.SizeBytes">
            <summary>
            size in bytes of the file attached to this download
            </summary>
        </member>
        <member name="T:Fetch.Api.DownloadCollection">
            <summary>
            Represents a collection of products that serializes to match the XML 
            returned by Fetch
            </summary>
        </member>
        <member name="T:Fetch.Api.Account">
            <summary>
            Product is a model object that mirrors the type used by the Fetch REST API, and contains
            all the properties and methods offered by the API.
            </summary>
        </member>
        <member name="M:Fetch.Api.Account.Details">
            <summary>
            Retrieves the account details
            </summary>
        </member>
        <member name="M:Fetch.Api.Account.NewToken">
            <summary>
            Generates a new API Token
            </summary>
        </member>
        <member name="P:Fetch.Api.Account.Id">
            <summary>
            unique identifier for this account (currently the subdomain)
            </summary>
        </member>
        <member name="P:Fetch.Api.Account.Name">
            <summary>
            Account name
            </summary>
        </member>
        <member name="P:Fetch.Api.Account.Email">
            <summary>
            Account email address
            </summary>
        </member>
        <member name="P:Fetch.Api.Account.BillingEmail">
            <summary>
            Billing email address
            </summary>
        </member>
        <member name="P:Fetch.Api.Account.Url">
            <summary>
            Account URL
            </summary>
        </member>
        <member name="P:Fetch.Api.Account.OrderExpirationInHours">
            <summary>
            Number of hours an Product is available for download after an order is placed
            </summary>
        </member>
        <member name="P:Fetch.Api.Account.DownloadLimitPerProduct">
            <summary>
            Number of times an Product can be downloaded for an order
            </summary>
        </member>
        <member name="P:Fetch.Api.Account.ApiKey">
            <summary>
            API key
            </summary>
        </member>
        <member name="P:Fetch.Api.Account.ApiToken">
            <summary>
            API Token
            </summary>
        </member>
        <member name="P:Fetch.Api.Account.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:Fetch.Api.Account.CreatedAt">
            <summary>
            Currency
            </summary>
        </member>
        <member name="T:Fetch.Api.FetchException">
            <summary>
            Exceptions specific to the Fetch API
            </summary>
        </member>
        <member name="M:Fetch.Api.FetchException.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Fetch.Api.FetchException.#ctor(System.String)">
            <summary>
            constructor with a message to include
            </summary>
        </member>
        <member name="M:Fetch.Api.FetchException.#ctor(System.String,System.Exception)">
            <summary>
            constructor with a message and inner exception to include
            </summary>
        </member>
        <member name="T:Fetch.Api.Utility">
            <summary>
            Static utility functions
            </summary>
        </member>
        <member name="M:Fetch.Api.Utility.SerializeToXml(System.Object)">
            <summary>
            Serializes the given object into an XML string.  Object must have the
            SerializableAttribute applied.
            </summary>
            <param name="target">object to serialize</param>
            <returns>XML string</returns>
        </member>
        <member name="M:Fetch.Api.Utility.DeserializeFromXmlStream``1(System.IO.Stream)">
            <summary>
            Deserializes an object of the generic parameter type from the given
            stream of XML
            </summary>
            <typeparam name="T">type of the object to deserialize</typeparam>
            <param name="stream">XML stream containing the object data</param>
            <returns>instance of deserialized type</returns>
        </member>
        <member name="M:Fetch.Api.Utility.DeserializeFromXml``1(System.String)">
            <summary>
            Deserializes an object of the generic parameter type from the given 
            XML string
            </summary>
            <typeparam name="T">type of the object to deserialize</typeparam>
            <param name="xml">string of XML</param>
            <returns>instance of deserialized type</returns>
        </member>
        <member name="T:Fetch.Api.Order">
            <summary>
            Order is a model object that mirrors the type used by the Fetch REST API, and contains
            all the properties and methods offered by the API.
            </summary>
        </member>
        <member name="M:Fetch.Api.Order.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Fetch.Api.Order.Save">
            <summary>
            Commits this order data to Fetch.  Order is created if new,
            order is updated if existing.
            </summary>
        </member>
        <member name="M:Fetch.Api.Order.Delete">
            <summary>
            Removes this order from Fetch.
            </summary>
        </member>
        <member name="M:Fetch.Api.Order.Expire">
            <summary>
            Sets this order to expired, so it may no longer be downloaded.
            </summary>
        </member>
        <member name="M:Fetch.Api.Order.SendEmail">
            <summary>
            Forces a send of an email to the customer of this order
            </summary>
        </member>
        <member name="M:Fetch.Api.Order.RetrieveAll">
            <summary>
            Retrieve all orders available from Fetch
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fetch.Api.Order.Retrieve(System.String)">
            <summary>
            Retrieve a specific order from Fetch
            </summary>
            <param name="id">unique ID of the order to retrieve</param>
        </member>
        <member name="M:Fetch.Api.Order.Delete(System.String)">
            <summary>
            Deletes the given order from Fetch
            </summary>
            <param name="id">unique ID of the order to delete</param>
        </member>
        <member name="M:Fetch.Api.Order.Expire(System.String)">
            <summary>
            Expires the given order in Fetch, so it may no longer be downloaded.
            </summary>
            <param name="id">unique ID of the order</param>
        </member>
        <member name="M:Fetch.Api.Order.SendEmail(System.String)">
            <summary>
            Forces an email to be sent to the customer
            </summary>
            <param name="id">unique ID of the order</param>
        </member>
        <member name="M:Fetch.Api.Order.Create(Fetch.Api.Order)">
            <summary>
            Creates an order in Fetch
            </summary>
            <param name="order">the order data to create</param>
            <returns>the actual Order object created by Fetch</returns>
        </member>
        <member name="M:Fetch.Api.Order.Update(Fetch.Api.Order)">
            <summary>
            Updates an order in Fetch
            </summary>
            <param name="order">the order data to update</param>
            <returns>the actual Order object that was updated in Fetch</returns>
        </member>
        <member name="P:Fetch.Api.Order.SendEmailFlag">
            <summary>
            Gets or Sets whether or not to send an email when this order is created
            </summary>
        </member>
        <member name="P:Fetch.Api.Order.Id">
            <summary>
            unique ID of this order
            </summary>
        </member>
        <member name="P:Fetch.Api.Order.Title">
            <summary>
            textual description of the order
            </summary>
        </member>
        <member name="P:Fetch.Api.Order.FirstName">
            <summary>
            first name of the customer
            </summary>
        </member>
        <member name="P:Fetch.Api.Order.LastName">
            <summary>
            last name of the customer
            </summary>
        </member>
        <member name="P:Fetch.Api.Order.Email">
            <summary>
            email address of the customer
            </summary>
        </member>
        <member name="P:Fetch.Api.Order.ExpirationDate">
            <summary>
            date that this order will expire, and no longer be available for download
            </summary>
        </member>
        <member name="P:Fetch.Api.Order.DownloadCount">
            <summary>
            number of times products in this order have been downloaded
            </summary>
        </member>
        <member name="P:Fetch.Api.Order.CreatedAt">
            <summary>
            date that this order was created
            </summary>
        </member>
        <member name="P:Fetch.Api.Order.OrderProducts">
            <summary>
            products that are included in this order
            </summary>
        </member>
        <member name="P:Fetch.Api.Order.IsNew">
            <summary>
            Gets true if this order has not been committed to Fetch.  Gets false if this
            order already exists in Fetch.
            </summary>
        </member>
        <member name="T:Fetch.Api.OrderCollection">
            <summary>
            Represents a collection of orders that serializes to match the XML 
            returned by Fetch
            </summary>
        </member>
        <member name="T:Fetch.Api.OrderItem">
            <summary>
            object that is used to describe products included in an order
            </summary>
        </member>
        <member name="P:Fetch.Api.OrderItem.Sku">
            <summary>
            unique ID of an product in an order
            </summary>
        </member>
        <member name="T:Fetch.Api.RestConnection`1">
            <summary>
            sends and receives communications with a RESTful web service using GET and POST.
            </summary>
            <typeparam name="ResponseType">the type of object to be deserialized from the 
            response XML the web service returns</typeparam>
        </member>
        <member name="M:Fetch.Api.RestConnection`1.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Fetch.Api.RestConnection`1.InvokeGet(System.String)">
            <summary>
            initiates a GET request to the WS, and calls the given method
            </summary>
            <example>http://restful.webservice.com/&lt;methodName&gt;</example>
            <param name="methodName">name of the method to execute</param>
            <returns>an object deserialized from the XML returned</returns>
        </member>
        <member name="M:Fetch.Api.RestConnection`1.InvokeGet(System.String,System.String[])">
            <summary>
            initiates a GET request to the WS, and calls the given method with the optional arguments
            </summary>
            <example>http://restful.webservice.com/&lt;methodName&gt;/&lt;arg0&gt;/&lt;arg1&gt;</example>
            <param name="methodName">name of the method to execute</param>
            <param name="arguments">list of additional arguments to add the the URL</param>
            <returns>an object deserialized from the XML returned</returns>
        </member>
        <member name="M:Fetch.Api.RestConnection`1.InvokePut(System.String,System.Object)">
            <summary>
            initiates a POST request to the WS to the given method and POSTs the given object,
            serialized as XML
            </summary>
            <example>http://restful.webservice.com/&lt;methodName&gt;</example>
            <param name="methodName">name of the method to execute</param>
            <param name="toSend">object to serialize into XML and POST</param>
            <returns>an object deserialized from the XML returned</returns>
        </member>
        <member name="M:Fetch.Api.RestConnection`1.InvokePut(System.String,System.Object,System.String[])">
            <summary>
            initiates a POST request to the WS to the given method and optional parameters and 
            POSTs the given object serialized as XML
            </summary>
            <example>http://restful.webservice.com/&lt;methodName&gt;/&lt;arg0&gt;/&lt;arg1&gt;</example>
            <param name="methodName">name of the method to execute</param>
            <param name="toSend">object to serialize into XML and POST</param>
            <param name="arguments">list of additional arguments to add the the URL</param>
            <returns>an object deserialized from the XML returned</returns>
        </member>
        <member name="M:Fetch.Api.RestConnection`1.ThrowWebException(System.Net.WebException)">
            <summary>
            Reads any error messages thrown from the connection, and rethrows the exception w/ 
            the additional information
            </summary>
        </member>
        <member name="T:Fetch.Api.Config">
            <summary>
            Configuration parameters for the connection to Fetch
            </summary>
        </member>
        <member name="M:Fetch.Api.Config.GetAuthorization">
            <summary>
            Retrieves the key/token pair encoded to be sent in a request to authenticate 
            the request
            </summary>
            <returns>base64 encoded key/token pair</returns>
        </member>
        <member name="P:Fetch.Api.Config.Domain">
            <summary>
            The domain used to connect to your account
            </summary>
            <example>http://&lt;subdomain.fetchapp.com&gt;/</example>
        </member>
        <member name="P:Fetch.Api.Config.SubDomain">
            <summary>
            The subdomain used to connect to your account. DEPRECIATED.
            </summary>
            <example>http://&lt;subdomain&gt;.fetchapp.com/</example>
        </member>
        <member name="P:Fetch.Api.Config.Key">
            <summary>
            Authentication key used to log into the Fetch API. 
            Log in to your Fetch website and click "API" to retrieve your Key and Token.
            </summary>
        </member>
        <member name="P:Fetch.Api.Config.Token">
            <summary>
            Authentication token used to log into the Fetch API.
            Log in to your Fetch website and click "API" to retrieve your Key and Token.
            </summary>
        </member>
        <member name="T:Fetch.Api.Product">
            <summary>
            Product is a model object that mirrors the type used by the Fetch REST API, and contains
            all the properties and methods offered by the API.
            </summary>
        </member>
        <member name="M:Fetch.Api.Product.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Fetch.Api.Product.Save">
            <summary>
            Commits the current product to Fetch.  Product is created if new, 
            or updated if existing.
            </summary>
        </member>
        <member name="M:Fetch.Api.Product.Delete">
            <summary>
            Deletes the current product from Fetch.
            </summary>
        </member>
        <member name="M:Fetch.Api.Product.RetrieveAll">
            <summary>
            Retrieve all the existing products from Fetch
            </summary>
        </member>
        <member name="M:Fetch.Api.Product.Retrieve(System.String)">
            <summary>
            Retrieve a specific product from Fetch
            </summary>
            <param name="sku">The SKU of the Product to retrieve</param>
        </member>
        <member name="M:Fetch.Api.Product.Delete(System.String)">
            <summary>
            Deletes an product from Fetch
            </summary>
            <param name="sku">the SKU of the Product to delete</param>
        </member>
        <member name="M:Fetch.Api.Product.Create(Fetch.Api.Product)">
            <summary>
            Creates a new product in Fetch
            </summary>
            <returns>the actual product object that was created by Fetch</returns>
        </member>
        <member name="M:Fetch.Api.Product.Update(Fetch.Api.Product)">
            <summary>
            Updates the given product in Fetch
            </summary>
            <returns>the actual product object that was updated in Fetch</returns>
        </member>
        <member name="P:Fetch.Api.Product.Sku">
            <summary>
            unique identifier for this product
            </summary>
        </member>
        <member name="P:Fetch.Api.Product.Name">
            <summary>
            friendly name of the product
            </summary>
        </member>
        <member name="P:Fetch.Api.Product.DownloadCount">
            <summary>
            number of times this Product has been downloaded from Fetch
            </summary>
        </member>
        <member name="P:Fetch.Api.Product.CreatedAt">
            <summary>
            date this product was created
            </summary>
        </member>
        <member name="P:Fetch.Api.Product.Filename">
            <summary>
            The name of the file attached to this product
            </summary>
        </member>
        <member name="P:Fetch.Api.Product.SizeBytes">
            <summary>
            size in bytes of the file attached to this product
            </summary>
        </member>
        <member name="P:Fetch.Api.Product.ContentType">
            <summary>
            type of file attached to this product
            </summary>
        </member>
        <member name="P:Fetch.Api.Product.IsNew">
            <summary>
            Gets true if this product has not been committed to Fetch.  Gets false if this
            product already exists in Fetch.
            </summary>
        </member>
        <member name="T:Fetch.Api.ProductCollection">
            <summary>
            Represents a collection of products that serializes to match the XML 
            returned by Fetch
            </summary>
        </member>
        <member name="T:Fetch.Api.Message">
            <summary>
            Represents messages returned from Fetch REST GET commands that contain results
            of the opertaion.
            </summary>
        </member>
        <member name="M:Fetch.Api.Message.ToString">
            <summary>
            Override ToString
            </summary>
            <returns>text of the message</returns>
        </member>
        <member name="F:Fetch.Api.Message.OkResponse">
            <summary>
            constant representing a successful response
            </summary>
        </member>
        <member name="P:Fetch.Api.Message.Text">
            <summary>
            The body of the message.
            </summary>
        </member>
        <member name="T:Fetch.Api.Upload">
            <summary>
            Product is a model object that mirrors the type used by the Fetch REST API, and contains
            all the properties and methods offered by the API.
            </summary>
        </member>
        <member name="M:Fetch.Api.Upload.RetrieveAll">
            <summary>
            Retrieve all the existing products from Fetch
            </summary>
        </member>
        <member name="M:Fetch.Api.Upload.Retrieve(System.Int32)">
            <summary>
            Retrieve a specific product from Fetch
            </summary>
            <param name="sku">The SKU of the Product to retrieve</param>
        </member>
        <member name="P:Fetch.Api.Upload.Id">
            <summary>
            unique identifier for this product
            </summary>
        </member>
        <member name="P:Fetch.Api.Upload.OrderId">
            <summary>
            Associated order (if present)
            </summary>
        </member>
        <member name="P:Fetch.Api.Upload.ProductSku">
            <summary>
            Product Sku
            </summary>
        </member>
        <member name="P:Fetch.Api.Upload.IPAddress">
            <summary>
            IP Address of client
            </summary>
        </member>
        <member name="P:Fetch.Api.Upload.UploadedAt">
            <summary>
            date this product was uploaded
            </summary>
        </member>
        <member name="P:Fetch.Api.Upload.SizeBytes">
            <summary>
            size in bytes of the file attached to this upload
            </summary>
        </member>
        <member name="T:Fetch.Api.UploadCollection">
            <summary>
            Represents a collection of products that serializes to match the XML 
            returned by Fetch
            </summary>
        </member>
    </members>
</doc>
